{"version":3,"sources":["../src/components/button/Button.tsx","../src/components/input/Input.tsx"],"names":["_a","_b","jsx","useId","useState","useEffect","jsxs"],"mappings":"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","file":"index.cjs","sourcesContent":["import React from \"react\";\r\n\r\n/** Visual “shape” del botón */\r\nexport type Appearance = \"solid\" | \"outline\" | \"ghost\" | \"link\";\r\n\r\n/** Paleta alineada a tokens de styles.css */\r\nexport type Color = \"primary\" | \"secondary\" | \"success\" | \"warning\" | \"danger\";\r\n\r\n/** Back-compat con tu API vieja */\r\nexport type LegacyVariant = \"primary\" | \"outline\" | \"link\" | \"outlineFill\";\r\n\r\nexport interface ButtonProps\r\n    extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n    /** Nueva API */\r\n    appearance?: Appearance;\r\n    color?: Color;\r\n\r\n    /** Prop legada (opcional). Se mapea a la nueva API. */\r\n    variant?: LegacyVariant;\r\n}\r\n\r\nfunction mapLegacy(variant?: LegacyVariant): { appearance: Appearance; color: Color } {\r\n    switch (variant) {\r\n        case \"outline\":\r\n            return { appearance: \"outline\", color: \"primary\" };\r\n        case \"link\":\r\n            return { appearance: \"link\", color: \"primary\" };\r\n        case \"outlineFill\":\r\n            return { appearance: \"ghost\", color: \"primary\" };\r\n        case \"primary\":\r\n        default:\r\n            return { appearance: \"solid\", color: \"primary\" };\r\n    }\r\n}\r\n\r\n/** Helper para strings tokenizados */\r\nconst TOK = {\r\n    primary: { base: \"var(--color-primary)\", h: \"var(--color-primary-600)\", a: \"var(--color-primary-700)\" },\r\n    secondary: { base: \"var(--color-secondary)\", h: \"var(--color-secondary-600)\", a: \"var(--color-secondary-700)\" },\r\n    success: { base: \"var(--color-success)\", h: \"var(--color-success-600)\", a: \"var(--color-success-700)\" },\r\n    warning: { base: \"var(--color-warning)\", h: \"var(--color-warning-600)\", a: \"var(--color-warning-700)\" },\r\n    danger: { base: \"var(--color-danger)\", h: \"var(--color-danger-600)\", a: \"var(--color-danger-700)\" },\r\n} satisfies Record<Color, { base: string; h: string; a: string }>;\r\n\r\n/** Reusable button – sin clases dinámicas de Tailwind */\r\nexport default function Button({\r\n    children,\r\n    appearance,\r\n    color,\r\n    variant, // legacy\r\n    className = \"\",\r\n    disabled = false,\r\n    style,\r\n    ...props\r\n}: ButtonProps) {\r\n    const legacy = mapLegacy(variant);\r\n    const _appearance: Appearance = appearance ?? legacy.appearance ?? \"solid\";\r\n    const _color: Color = color ?? legacy.color ?? \"primary\";\r\n\r\n    // ===== base classes – TODAS literales para Tailwind v4 =====\r\n    const base =\r\n        \"inline-flex h-11 items-center justify-center gap-2 rounded-md px-6 text-sm font-medium \" +\r\n        \"transition-[background-color,opacity,color,border,box-shadow] duration-150 \" +\r\n        \"focus:outline-none focus-visible:ring-2 \" +\r\n        \"focus-visible:ring-[var(--btn-ring)] focus-visible:ring-offset-2 focus-visible:ring-offset-[var(--btn-ring-offset)]\";\r\n\r\n    // ===== variant classes – usan variables genéricas (siempre literales) =====\r\n    const clsByAppearance: Record<Appearance, string> = {\r\n        solid:\r\n            \"text-[var(--btn-fg)] bg-[var(--btn-bg)] hover:bg-[var(--btn-bg-hover)] active:bg-[var(--btn-bg-active)] shadow-sm\",\r\n        outline:\r\n            \"text-[var(--btn-fg)] border bg-[var(--btn-bg)] border-[var(--btn-border)] hover:border-[var(--btn-border-hover)] hover:text-[var(--btn-text-hover)]\",\r\n        ghost:\r\n            \"text-[var(--btn-border)] border border-[var(--btn-border)] bg-transparent hover:bg-[var(--btn-ghost-hover)]\",\r\n        link:\r\n            \"h-auto px-0 bg-transparent underline underline-offset-2 text-[var(--btn-border)] hover:text-[var(--btn-border-hover)]\",\r\n    };\r\n\r\n    // ===== valores CSS variables por (appearance, color) =====\r\n    const c = TOK[_color];\r\n\r\n    const styleVars: React.CSSProperties & Record<string, string> =\r\n        _appearance === \"solid\"\r\n            ? {\r\n                \"--btn-bg\": c.base,\r\n                \"--btn-bg-hover\": c.h,\r\n                \"--btn-bg-active\": c.a,\r\n                \"--btn-fg\": \"#ffffff\",\r\n                \"--btn-border\": c.base,\r\n                \"--btn-border-hover\": c.h,\r\n                \"--btn-text-hover\": \"#ffffff\",\r\n                \"--btn-ghost-hover\": \"transparent\",\r\n                \"--btn-ring\": c.base,\r\n                \"--btn-ring-offset\": \"var(--color-bg)\",\r\n            }\r\n            : _appearance === \"outline\"\r\n                ? {\r\n                    \"--btn-bg\": \"var(--color-card)\",\r\n                    \"--btn-fg\": \"var(--color-ink)\",\r\n                    \"--btn-border\": \"var(--color-border)\",\r\n                    \"--btn-border-hover\": c.base,\r\n                    \"--btn-text-hover\": c.base,\r\n                    \"--btn-ghost-hover\": \"transparent\",\r\n                    \"--btn-ring\": c.base,\r\n                    \"--btn-ring-offset\": \"var(--color-bg)\",\r\n                }\r\n                : _appearance === \"ghost\"\r\n                    ? {\r\n                        \"--btn-bg\": \"transparent\",\r\n                        \"--btn-fg\": c.base,\r\n                        \"--btn-border\": c.base,\r\n                        \"--btn-border-hover\": c.h,\r\n                        \"--btn-text-hover\": c.h,\r\n                        \"--btn-ghost-hover\": `color-mix(in_oklab, ${c.base}, transparent 85%)`,\r\n                        \"--btn-ring\": c.base,\r\n                        \"--btn-ring-offset\": \"var(--color-bg)\",\r\n                    }\r\n                    : {\r\n                        // link\r\n                        \"--btn-bg\": \"transparent\",\r\n                        \"--btn-fg\": c.base,\r\n                        \"--btn-border\": c.base,\r\n                        \"--btn-border-hover\": c.h,\r\n                        \"--btn-text-hover\": c.h,\r\n                        \"--btn-ghost-hover\": \"transparent\",\r\n                        \"--btn-ring\": c.base,\r\n                        \"--btn-ring-offset\": \"var(--color-bg)\",\r\n                    };\r\n\r\n    const disabledCls = disabled\r\n        ? \"opacity-50 pointer-events-none select-none\"\r\n        : \"cursor-pointer\";\r\n\r\n    return (\r\n        <button\r\n            {...props}\r\n            disabled={disabled}\r\n            style={{ ...styleVars, ...style }}\r\n            data-appearance={_appearance}\r\n            data-color={_color}\r\n            className={`${base} ${clsByAppearance[_appearance]} ${disabledCls} ${className}`}\r\n        >\r\n            {children}\r\n        </button>\r\n    );\r\n}\r\n","'use client';\r\nimport React, { useEffect, useId, useState } from 'react';\r\n\r\nexport interface InputProps\r\n    extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onChange'> {\r\n    label?: string;\r\n    error?: boolean;\r\n    onChange?: React.ChangeEventHandler<HTMLInputElement>;\r\n}\r\n\r\nexport default function Input({\r\n    label = '',\r\n    value = '',\r\n    onChange,\r\n    placeholder = '',\r\n    required = false,\r\n    maxLength,\r\n    className = '',\r\n    disabled = false,\r\n    readOnly = false,\r\n    name,\r\n    type = 'text',\r\n    error = false,\r\n    ...props\r\n}: InputProps) {\r\n    const id = useId();\r\n    const counterId = `${id}-counter`;\r\n    const strVal = typeof value === 'string' ? value : String(value ?? '');\r\n    const hasValue = strVal.length > 0;\r\n    const length = strVal.length;\r\n\r\n    const [focused, setFocused] = useState(false);\r\n    const [leftPad, setLeftPad] = useState(16);\r\n\r\n    useEffect(() => {\r\n        const el = document.getElementById(id);\r\n        if (!el) return;\r\n\r\n        const update = () => {\r\n            const cs = window.getComputedStyle(el);\r\n            const pl = parseFloat(cs.paddingLeft || '16');\r\n            setLeftPad(Number.isFinite(pl) ? pl : 16);\r\n        };\r\n\r\n        update();\r\n\r\n        const ro = new ResizeObserver(update);\r\n        ro.observe(el);\r\n\r\n        window.addEventListener('resize', update);\r\n        return () => {\r\n            ro.disconnect();\r\n            window.removeEventListener('resize', update);\r\n        };\r\n    }, [id]);\r\n\r\n    const effectivePlaceholder = focused || hasValue ? placeholder : '';\r\n\r\n    return (\r\n        <div className={`relative w-full ${className}`}>\r\n            <input\r\n                id={id}\r\n                name={name}\r\n                type={type}\r\n                value={value}\r\n                onChange={onChange}\r\n                onFocus={() => setFocused(true)}\r\n                onBlur={() => setFocused(false)}\r\n                placeholder={effectivePlaceholder}\r\n                disabled={disabled}\r\n                readOnly={readOnly}\r\n                maxLength={maxLength}\r\n                aria-invalid={!!error}\r\n                aria-describedby={maxLength ? counterId : undefined}\r\n                className={`\r\n          block w-full bg-transparent outline-none\r\n          text-[15px] leading-6 ${disabled ? 'text-slate-400' : 'text-slate-900'}\r\n          placeholder-slate-400\r\n          border-0 border-b\r\n          ${error ? 'border-rose-500 focus:border-rose-600' : 'border-slate-300 focus:border-sky-700'}\r\n          focus:ring-0\r\n          pl-4 pr-4 pt-6 pb-2\r\n          disabled:cursor-not-allowed\r\n          transition-[border-color] duration-150\r\n        `}\r\n                {...props}\r\n            />\r\n\r\n            {label && (\r\n                <label\r\n                    htmlFor={id}\r\n                    className={`\r\n            pointer-events-none absolute\r\n            transition-all duration-200\r\n            ${focused || hasValue ? 'top-1.5 text-xs' : 'top-[15px] translate-y-[-1px] text-sm'}\r\n            ${error ? 'text-rose-600' : focused ? 'text-sky-700' : 'text-slate-600'}\r\n            font-medium leading-5\r\n          `}\r\n                    style={{ left: `${leftPad}px` }}\r\n                >\r\n                    {label}\r\n                    {required && <span aria-hidden=\"true\">*</span>}\r\n                </label>\r\n            )}\r\n\r\n            {maxLength !== undefined && (\r\n                <div\r\n                    id={counterId}\r\n                    className={`mt-1 text-right text-[12px] ${error ? 'text-rose-600' : 'text-slate-500'}`}\r\n                >\r\n                    {length} / {maxLength}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n"]}