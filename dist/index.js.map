{"version":3,"sources":["../src/components/button/Button.tsx","../src/components/input/Input.tsx"],"names":["jsx"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\r\n\r\nexport type ButtonVariant = 'primary' | 'outline' | 'link' | 'outlineFill';\r\n\r\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n    /** Visual style of the button */\r\n    variant?: ButtonVariant;\r\n}\r\n\r\n/** Reusable button with 4 visual variants. */\r\nexport default function Button({\r\n    children,\r\n    variant = 'primary',\r\n    className = '',\r\n    disabled = false,\r\n    style,\r\n    ...props\r\n}: ButtonProps) {\r\n    const base =\r\n        'h-11 px-6 rounded-md text-sm font-medium transition-colors focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-[#5aa7ff]';\r\n\r\n    const variants: Record<ButtonVariant, string> = {\r\n        primary: `text-white bg-[#002d4c] hover:bg-[#00243c] ${base}`,\r\n        outline: `border border-gray-400 bg-white hover:bg-gray-50 ${base}`,\r\n        link: `h-auto px-0 bg-transparent text-[#003865] underline underline-offset-2 hover:text-[#002d4c] ${base}`,\r\n        outlineFill: `border border-[#002d4c] text-[#002d4c] bg-transparent hover:bg-[#002d4c] hover:text-white ${base}`,\r\n    };\r\n\r\n    const disabledCls = disabled ? 'opacity-60 cursor-not-allowed' : 'cursor-pointer';\r\n\r\n    return (\r\n        <button\r\n            {...props}\r\n            disabled={disabled}\r\n            style={style}\r\n            className={`${variants[variant]} ${disabledCls} ${className}`}\r\n        >\r\n            {children}\r\n        </button>\r\n    );\r\n}\r\n","'use client';\r\nimport React, { useEffect, useId, useState } from 'react';\r\n\r\nexport interface InputProps\r\n    extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onChange'> {\r\n    label?: string;\r\n    error?: boolean;\r\n    onChange?: React.ChangeEventHandler<HTMLInputElement>;\r\n}\r\n\r\nexport default function Input({\r\n    label = '',\r\n    value = '',\r\n    onChange,\r\n    placeholder = '',\r\n    required = false,\r\n    maxLength,\r\n    className = '',\r\n    disabled = false,\r\n    readOnly = false,\r\n    name,\r\n    type = 'text',\r\n    error = false,\r\n    ...props\r\n}: InputProps) {\r\n    const id = useId();\r\n    const counterId = `${id}-counter`;\r\n    const strVal = typeof value === 'string' ? value : String(value ?? '');\r\n    const hasValue = strVal.length > 0;\r\n    const length = strVal.length;\r\n\r\n    const [focused, setFocused] = useState(false);\r\n    const [leftPad, setLeftPad] = useState(16);\r\n\r\n    useEffect(() => {\r\n        const el = document.getElementById(id);\r\n        if (!el) return;\r\n\r\n        const update = () => {\r\n            const cs = window.getComputedStyle(el);\r\n            const pl = parseFloat(cs.paddingLeft || '16');\r\n            setLeftPad(Number.isFinite(pl) ? pl : 16);\r\n        };\r\n\r\n        update();\r\n\r\n        const ro = new ResizeObserver(update);\r\n        ro.observe(el);\r\n\r\n        window.addEventListener('resize', update);\r\n        return () => {\r\n            ro.disconnect();\r\n            window.removeEventListener('resize', update);\r\n        };\r\n    }, [id]);\r\n\r\n    const effectivePlaceholder = focused || hasValue ? placeholder : '';\r\n\r\n    return (\r\n        <div className={`relative w-full ${className}`}>\r\n            <input\r\n                id={id}\r\n                name={name}\r\n                type={type}\r\n                value={value}\r\n                onChange={onChange}\r\n                onFocus={() => setFocused(true)}\r\n                onBlur={() => setFocused(false)}\r\n                placeholder={effectivePlaceholder}\r\n                disabled={disabled}\r\n                readOnly={readOnly}\r\n                maxLength={maxLength}\r\n                aria-invalid={!!error}\r\n                aria-describedby={maxLength ? counterId : undefined}\r\n                className={`\r\n          block w-full bg-transparent outline-none\r\n          text-[15px] leading-6 ${disabled ? 'text-slate-400' : 'text-slate-900'}\r\n          placeholder-slate-400\r\n          border-0 border-b\r\n          ${error ? 'border-rose-500 focus:border-rose-600' : 'border-slate-300 focus:border-sky-700'}\r\n          focus:ring-0\r\n          pl-4 pr-4 pt-6 pb-2\r\n          disabled:cursor-not-allowed\r\n          transition-[border-color] duration-150\r\n        `}\r\n                {...props}\r\n            />\r\n\r\n            {label && (\r\n                <label\r\n                    htmlFor={id}\r\n                    className={`\r\n            pointer-events-none absolute\r\n            transition-all duration-200\r\n            ${focused || hasValue ? 'top-1.5 text-xs' : 'top-[15px] translate-y-[-1px] text-sm'}\r\n            ${error ? 'text-rose-600' : focused ? 'text-sky-700' : 'text-slate-600'}\r\n            font-medium leading-5\r\n          `}\r\n                    style={{ left: `${leftPad}px` }}\r\n                >\r\n                    {label}\r\n                    {required && <span aria-hidden=\"true\">*</span>}\r\n                </label>\r\n            )}\r\n\r\n            {maxLength !== undefined && (\r\n                <div\r\n                    id={counterId}\r\n                    className={`mt-1 text-right text-[12px] ${error ? 'text-rose-600' : 'text-slate-500'}`}\r\n                >\r\n                    {length} / {maxLength}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n"]}